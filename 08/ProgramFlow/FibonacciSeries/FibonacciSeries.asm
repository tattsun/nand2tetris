// C_PUSH argument:1
@ARG // 0
D=M // 1
@1 // 2
D=D+A // 3
A=D // 4
D=M // 5
@SP // 6
A=M // 7
M=D // 8
@0 // 9
M=M+1 // 10
// C_POP pointer:1
@THAT // 11
D=A // 12
@0 // 13
D=D+A // 14
@R13 // 15
M=D // 16
@0 // 17
M=M-1 // 18
A=M // 19
D=M // 20
@R13 // 21
A=M // 22
M=D // 23
// C_PUSH constant:0
@0 // 24
D=A // 25
@0 // 26
A=M // 27
M=D // 28
@0 // 29
M=M+1 // 30
// C_POP that:0
@THAT // 31
D=M // 32
@0 // 33
D=D+A // 34
@R13 // 35
M=D // 36
@0 // 37
M=M-1 // 38
A=M // 39
D=M // 40
@R13 // 41
A=M // 42
M=D // 43
// C_PUSH constant:1
@1 // 44
D=A // 45
@0 // 46
A=M // 47
M=D // 48
@0 // 49
M=M+1 // 50
// C_POP that:1
@THAT // 51
D=M // 52
@1 // 53
D=D+A // 54
@R13 // 55
M=D // 56
@0 // 57
M=M-1 // 58
A=M // 59
D=M // 60
@R13 // 61
A=M // 62
M=D // 63
// C_PUSH argument:0
@ARG // 64
D=M // 65
@0 // 66
D=D+A // 67
A=D // 68
D=M // 69
@SP // 70
A=M // 71
M=D // 72
@0 // 73
M=M+1 // 74
// C_PUSH constant:2
@2 // 75
D=A // 76
@0 // 77
A=M // 78
M=D // 79
@0 // 80
M=M+1 // 81
// sub
@0 // 82
M=M-1 // 83
A=M // 84
D=M // 85
@0 // 86
M=M-1 // 87
A=M // 88
M=M-D // 89
@0 // 90
M=M+1 // 91
// C_POP argument:0
@ARG // 92
D=M // 93
@0 // 94
D=D+A // 95
@R13 // 96
M=D // 97
@0 // 98
M=M-1 // 99
A=M // 100
D=M // 101
@R13 // 102
A=M // 103
M=D // 104
// label MAIN_LOOP_START
($MAIN_LOOP_START)
// C_PUSH argument:0
@ARG // 105
D=M // 106
@0 // 107
D=D+A // 108
A=D // 109
D=M // 110
@SP // 111
A=M // 112
M=D // 113
@0 // 114
M=M+1 // 115
// if-goto COMPUTE_ELEMENT
@0 // 116
M=M-1 // 117
A=M // 118
D=M // 119
@$COMPUTE_ELEMENT // 120
D;JNE // 121
// goto END_PROGRAM
@$END_PROGRAM // 122
0;JMP // 123
// label COMPUTE_ELEMENT
($COMPUTE_ELEMENT)
// C_PUSH that:0
@THAT // 124
D=M // 125
@0 // 126
D=D+A // 127
A=D // 128
D=M // 129
@SP // 130
A=M // 131
M=D // 132
@0 // 133
M=M+1 // 134
// C_PUSH that:1
@THAT // 135
D=M // 136
@1 // 137
D=D+A // 138
A=D // 139
D=M // 140
@SP // 141
A=M // 142
M=D // 143
@0 // 144
M=M+1 // 145
// add
@0 // 146
M=M-1 // 147
A=M // 148
D=M // 149
@0 // 150
M=M-1 // 151
A=M // 152
M=D+M // 153
@0 // 154
M=M+1 // 155
// C_POP that:2
@THAT // 156
D=M // 157
@2 // 158
D=D+A // 159
@R13 // 160
M=D // 161
@0 // 162
M=M-1 // 163
A=M // 164
D=M // 165
@R13 // 166
A=M // 167
M=D // 168
// C_PUSH pointer:1
@THAT // 169
D=A // 170
@0 // 171
D=D+A // 172
A=D // 173
D=M // 174
@SP // 175
A=M // 176
M=D // 177
@0 // 178
M=M+1 // 179
// C_PUSH constant:1
@1 // 180
D=A // 181
@0 // 182
A=M // 183
M=D // 184
@0 // 185
M=M+1 // 186
// add
@0 // 187
M=M-1 // 188
A=M // 189
D=M // 190
@0 // 191
M=M-1 // 192
A=M // 193
M=D+M // 194
@0 // 195
M=M+1 // 196
// C_POP pointer:1
@THAT // 197
D=A // 198
@0 // 199
D=D+A // 200
@R13 // 201
M=D // 202
@0 // 203
M=M-1 // 204
A=M // 205
D=M // 206
@R13 // 207
A=M // 208
M=D // 209
// C_PUSH argument:0
@ARG // 210
D=M // 211
@0 // 212
D=D+A // 213
A=D // 214
D=M // 215
@SP // 216
A=M // 217
M=D // 218
@0 // 219
M=M+1 // 220
// C_PUSH constant:1
@1 // 221
D=A // 222
@0 // 223
A=M // 224
M=D // 225
@0 // 226
M=M+1 // 227
// sub
@0 // 228
M=M-1 // 229
A=M // 230
D=M // 231
@0 // 232
M=M-1 // 233
A=M // 234
M=M-D // 235
@0 // 236
M=M+1 // 237
// C_POP argument:0
@ARG // 238
D=M // 239
@0 // 240
D=D+A // 241
@R13 // 242
M=D // 243
@0 // 244
M=M-1 // 245
A=M // 246
D=M // 247
@R13 // 248
A=M // 249
M=D // 250
// goto MAIN_LOOP_START
@$MAIN_LOOP_START // 251
0;JMP // 252
// label END_PROGRAM
($END_PROGRAM)
